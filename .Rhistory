x<-c(4,TRUE)
x <- 4L
x<-c(1,3,5)
y <- c(3,2,10)
cbind(x,y)
rbind(x,y)
x <- lis(2,"a","b", TRUE)
x <- list(2,"a","b", TRUE)
swirl()
library("swirl")
library("swirl")
library(swirl)
install.packages("swirl")
packageVersion("swirl")
library(swirl)
swirl()
install_from_swirl("R Programming")
swirl()
5+7
x<-5:7
x<-5+7
x
y < x-3
y <- x-3
y
c(1.1, 9, 3.14)
z <- c(1.1, 9, 3.14)
?c
z
c(z,555)
c(z,555,z)
z*2+100
my_sqrt < - sqrt(z-1)
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/ my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1, 2, 3, 4) + c(0, 10, 100)
z*2+1000
my_div
getwd()
ls()
x<-9
ls()
list.fils()
list.files()
?list.files
x<- list(a:matrix(1:4,2,2),b=matrix(1:6,3,2))
x<- list(a=matrix(1:4,2,2),b=matrix(1:6,3,2))
$a
x
x$a
lapply(x,function(row1) col[1.])
lapply(x,function(row1) row1[1.])
lapply(x,function(row1) row1[1,])
?quantile
rnorm(2*2*2)
rnorm(2*2*10)
array(rnorm(2*2*10),c(2,2,10))
?array
?rnorm
rnorm(40)
?noise
library(swirl)
swirl()
head(flags)
dim(flags)
viewinfo()
class(flags)
cls_list <- lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
?sapply
cls_list <- sapply(flags,class)
cls_vect <- sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head()
head(flag_colors)
lapply(flags,sum(flag_colors))
lapply(flags,sum())
lapply(flag_colors,sum())
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes,range)
sapply(flag_shapes,range)
shape_mat  <- sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flag_shapes,unique)
unique_vals <- lapply(flags,unique)
unique_vals
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals, function(elem) elem[2])
dim(flags)
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
library(datasets)
data(iris)
?iris
library(datasets)
data(iris)
?iris
Sepal.Length
library(datasets)
data("iris")
tapply(iris$Sepal.Length,iris$Species,mean)
rowMeans(iris[, 1:4])
colMeans(iris)
?apply(array, margin, ...)
apply(iris, 2, mean)
apply(iris[, 1:4], 2, mean)
apply(iris, 1, mean)
apply(iris[, 1:4], 1, mean)
library(datasets)
data(mtcars)
View(iris)
?mtcars
tapply(mtcars$mpg, mtcars$cyl, mean)
mean(mtcars$mpg, mtcars$cyl)
with(mtcars, tapply(mpg, cyl, mean))
?with
lapply(mtcars, mean)
sapply(mtcars, cyl, mean
\
sapply(mtcars, cyl, mean)
?apply
apply(mtcars, 2, mean)
split(mtcars, mtcars$cyl)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
sapply(split(mtcars$hp, mtcars$cyl), mean)
tapply(mtcars$hp, mtcars$cyl, mean)
v1 <- sapply(split(mtcars$hp, mtcars$cyl), mean)
v1[4] - V1[6]
v1[,4] - V1[,6]
v1[[4] - V1[[6]
v1[[4]] - V1[[6]]
v1[["4"]] - V1[["6"]]
v1[["1"]] - V1[["2"]]
v1[1]
v1[1]-v1[2]
?abs
round(abs(v1[1]-v1[2]))
debug(las)
debug(ls)
ls
?debug
?ls
debug(ls)
ls
?debug
round(abs(v1[1]-v1[3]))
apply(iris[, 1:4], 2, mean)
abs
v1
round(abs(v1[1]-v1[3]))
v1 <- sapply(split(mtcars$hp, mtcars$cyl), mean)
v1
round(abs(v1[1]-v1[3]))
swirl()
library(swirl)
swril()
swrirl()
swrirl()
library(swirl)
swirl()
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20,10)
LETTERS
sample(LETTERS)
sample(c(0,1),100,replace=TRUE,prob=(0.3,0.7))
sample(c(0,1),100,replace=TRUE,prob=(0.3, 0.7))
sample(c(0,1),100,replace=TRUE, prob=c(0.3, 0.7))
flips <- sample(c(0,1),100,replace=TRUE, prob=c(0.3, 0.7))
flips
sum(flips=1)
sum(flip)
sum(flips)
?rbinom
rbinom(1, size = 100, prob = 0.7)
rbinom(100, size = 100, prob = 0.7)
flips2 <- rbinom(100, size = 100, prob = 0.7)
flips2 <- rbinom(100, size =1, prob = 0.7)
flips2
sum(flips2)
rnorm
?rnorm
rnorm(10)
rnorm(10,mean=100,sd=25)
?rpois
rpois(5,lambda = 10)
my_pois <- replicate(100, rpois(5, 10))
my_pois
cm<- colMeans(my_pois)
cm
hist(cm)
library(swirl)
swirl()
data(cars)
?cars
head()
head(cars)
dim(cars)
summary(cars)
plot(cars)
Ã‰plot
?plot
plot(x = cars$speed, y = cars$dist)
plot(x = cars$dist, y = cars$speed)
plot(x = cars$dist, y = cars$speed,xlab="Speed")
plot(x = cars$speed, y = cars$dist,xlab="Speed")
plot(x = cars$speed, y = cars$dist,xlab="Speed",ylab="Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist,xlab="Speed",ylab="Stopping Distance")
plot(x = cars$speed, main="My Plot")
plot(x = cars$speed, y = cars$dist,main="My Plot")
plot(cars, main = "My Plot")
plot(cars, sub = "My Plot Subtitle")
?par
par(col=2)
plot(cars,col=2)
plot(cars,xlim=c(10,15))
?points
plot(cars,pch=2)
data(mtcars)
play()
head(mtcars)
summary(mtcars)
nxt()
?boxplot
boxplot(mpg ~ cyl, data = mtcars)
hist(mtcars$mpg)
setwd("C://Users/JennGanda/Documents/R/R-training/assignment")
getwd()
source("rankhospital.R")
rankhospital("MD", "heart attack", "worst")
?split
source(rankall.R)
setwd("C://Users/JennGanda/Documents/R/R-training/assignment")
getwd()
source(rankall.R)
setwd("C://Users/JennGanda/Documents/R/R-training/assignment")
getwd()
source("rankall.R"")
source("rankall.R")
> head(rankall("heart attack", 20), 10)
source("rankall.R")
> head(rankall("heart attack", 20), 10)
source("rankall.R")
> head(rankall("heart attack", 20), 10)
doutcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
##get only the data needed
keeps <-c("Hospital.Name","State","Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack",
"Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure",
"Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia")
d1 <- doutcome[keeps]
#change the long name
names(d1) <- c("hospital","state","heart attack","heart failure","pneumonia")
outcome "hearattack"
outcome <- "hearattack"
num<-20
d1 <- d1[keep]
## Return hospital name in that state with lowest 30-day death
## rate
##d2 <-  subset(d1,d1$state %in% state2,select=c("hospital",outcome))
#CONVERT AS NUMERIC
d2[,3]<-suppressWarnings(as.numeric(d1[,3]))
keep<- c("hospital","state",outcome)
d1 <- d1[keep]
outcome <- "heart attack"
keep<- c("hospital","state",outcome)
d1 <- d1[keep]
## Return hospital name in that state with lowest 30-day death
## rate
##d2 <-  subset(d1,d1$state %in% state2,select=c("hospital",outcome))
#CONVERT AS NUMERIC
d2[,3]<-suppressWarnings(as.numeric(d1[,3]))
outcome <- "heart attack"
doutcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
##get only the data needed
keeps <-c("Hospital.Name","State","Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack",
"Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure",
"Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia")
d1 <- doutcome[keeps]
#change the long name
names(d1) <- c("hospital","state","heart attack","heart failure","pneumonia")
keep<- c("hospital","state",outcome)
d1 <- d1[keep]
d1[,3]<-suppressWarnings(as.numeric(d1[,3]))
bad<-is.na(d1[,outcome])
d2 <- d1[!bad,]
s <-  split(d2, d2$state)
View(d2)
s <-  split(d2, d2$state)
index  <- with(d2,order(d2["state"],d2[outcome],d2["hospital"]))
ordered_desired_data <- d2[index, ]
View(ordered_desired_data)
lapply(s, rnk,num)
source("rankall.R")
lapply(s, rnk,num)
source("rankall.R")
lapply(s, rnk,num)
> head(rankall("heart attack", 20), 10)
rankall("heart attack", 20)
lapply(s, rnk,num)
source("rankall.R")
> head(rankall("heart attack", 20), 10)
source("rankall.R")
> head(rankall("heart attack", 20), 10)
num <- 20
outcome<-"heart attack"
doutcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
##get only the data needed
keeps <-c("Hospital.Name","State","Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack",
"Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure",
"Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia")
d1 <- doutcome[keeps]
#change the long name
names(d1) <- c("hospital","state","heart attack","heart failure","pneumonia")
keep<- c("hospital","state",outcome)
d1 <- d1[keep]
## Return hospital name in that state with lowest 30-day death
## rate
##d2 <-  subset(d1,d1$state %in% state2,select=c("hospital",outcome))
#CONVERT AS NUMERIC
d1[,3]<-suppressWarnings(as.numeric(d1[,3]))
bad<-is.na(d1[,outcome])
d2 <- d1[!bad,]
index  <- with(d2,order(d2["state"],d2[outcome],d2["hospital"]))
ordered_desired_data <- d2[index, ]
s <-  split(ordered_desired_data , ordered_desired_data$state)
hospitals <-  lapply(s, rnk,num)
hospitals <-  sapply(s, rnk,num)
hospitals <-  sapply(s, rnk,num)
hospitals <-  tapply(s, rnk,num)
hospitals <-  lapply(s, rnk,num)
as.data.frame(hospitals)
x<- as.data.frame(hospitals)
View(x)
?unlis
?unlist
unlist(hospitals)
x<-unlist(hospitals)
x<-unlist(hospitals,recursive = TRUE)
hospitals <-  sapply(s, rnk,num)
x<- as.data.frame(hospitals)
View(x)
length(hospitals)
?data.frame
hospitals <-  lapply(s, rnk,num)
View(hospitals)
hospitals <-  sapply(s, rnk,num)
View(hospitals)
x <-  sapply(s, rnk,num)
View(x)
source("rankall.R")
x <-  lapply(s, rnk,num)
View(x)
View(x)
r<-unlist(x)
View(x)
?rbind
do.call(rbind, x)
ds<- do.call(rbind, x)
View(ds)
class(ds)
ds<-data.frame(ds)
View(x)
View(x)
View(ds)
View(ds)
source("rankall.R")
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
